class advancedSlider extends HTMLElement{constructor(...e){super(...e);const t=this.attachShadow({mode:"open"});this.rangeElement=document.createElement("input"),this.rangeElement.setAttribute("type","range"),this.numberElement=document.createElement("input"),this.numberElement.setAttribute("type","number"),this.rangeElement.addEventListener("input",function(){this.value=this.rangeElement.value}.bind(this)),this.numberElement.addEventListener("input",function(){this.value=this.numberElement.value}.bind(this)),this.rangeElement.addEventListener("change",function(){this.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0}))}.bind(this)),this.numberElement.addEventListener("change",function(){this.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0}))}.bind(this)),t.appendChild(this.rangeElement),t.appendChild(this.numberElement)}static get observedAttributes(){return["min","max","value","step"]}attributeChangedCallback(e,t,n){this[e]=n}connectedCallback(){this.min=this.getAttribute("min"),this.max=this.getAttribute("max"),this.value=this.getAttribute("value"),this.step=this.getAttribute("step"),this.rangeElement.setAttribute("min",this.min),this.rangeElement.setAttribute("max",this.max),this.rangeElement.setAttribute("value",this.value),this.rangeElement.setAttribute("step",this.step),this.numberElement.setAttribute("value",this.value),this.numberElement.setAttribute("step",this.step)}set min(e){this.rangeElement.min=e}set max(e){this.rangeElement.max=e}set value(e){this.rangeElement.value=e,this.numberElement.value=e}set step(e){this.rangeElement.step=e,this.numberElement.step=e}get min(){return this.rangeElement.min}get max(){return this.rangeElement.max}get value(){return this.numberElement.value}get step(){return this.rangeElement.step}}customElements.define("advanced-slider",advancedSlider);